{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBAAOO,KAAK,OAAOC,MAAQT,EAAaU,SAjBtB,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,+BCRdK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCCXO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCDCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAsBtC,OAhBAC,qBAAU,WACNxB,EAAQC,GACNwB,MAAK,SAAAC,GAEHC,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAS,MAEd,UAKP,CAACpB,IAEEqB,EDZ2BM,CAAc3B,GAAlCa,EATuB,EAS7BN,KAAca,EATe,EASfA,QAGtB,OACI,qCACC,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAEpDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBASP,qBAAKA,UAAU,YAAf,SACKH,EAAOJ,KAAK,SAACC,GAAD,OACV,cAAC,EAAD,eAA+BA,GAAbA,EAAIC,aE5B7BiB,EAAe,WAAM,MAGM5C,mBAAS,CAAC,cAHhB,mBAGvB6C,EAHuB,KAGX9C,EAHW,KAS9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAGA,6BAEQ8C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAYA,GADNA,Y,MClBlC8B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b2383088.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n            setCategories( cat => [inputValue, ...cat] );\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit= { handleSubmit }>\r\n            <input type=\"text\" value={ inputValue } onChange={ handleInputChange } />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n  }","\r\n    export const getGifs = async(category) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=DBHiPVRDfpXTKVccqXdkXptlS8izHKWK`;\r\n        const resp = await fetch(url);\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n    \r\n        \r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React /*,{useState, useEffect }*/ from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //     .then(setImages);\r\n    // }, [category]);\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n    \r\n\r\n    return (\r\n        <>\r\n         <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n        {/* <div className=\"card-grid\">\r\n                { images.map( (img) => (\r\n                    <GifGridItem key={img.id} { ...img } />\r\n                )) \r\n                }\r\n        </div> */}\r\n\r\n           { <div className=\"card-grid\">\r\n                { images.map( (img) => (\r\n                    <GifGridItem key={img.id} { ...img } />\r\n                )) \r\n                }\r\n        </div> }\r\n        </>\r\n    )\r\n\r\n}\r\n","import {useState, useEffect } from 'react';\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n         .then(imgs => {\r\n\r\n            setTimeout(() => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                });\r\n            }, 1000);\r\n\r\n            \r\n         });\r\n         \r\n     }, [category]);\r\n\r\n    return state; //{ data: [], loading: true };\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, 'Bleach']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h1>GifExpertApp</h1>\r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr/>\r\n\r\n           \r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key= {category}\r\n                            category= { category } />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}